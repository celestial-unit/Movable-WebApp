{% extends "admin/layouts/admin.html.twig" %}

{% block title %}Agent Statistics{% endblock %}

{% block body %}
<div class="container py-5">
    <h3 class="text-center mb-4">Sentiment Statistics</h3>

    <!-- Raw Data Stats -->
    <div class="text-center mb-4">
        <p><strong>Happy Clients:</strong> {{ sentiment_statistics.happy_count }}</p>
        <p><strong>Neutral Clients:</strong> {{ sentiment_statistics.neutral_count }}</p>
        <p><strong>Angry Clients:</strong> {{ sentiment_statistics.angry_count }}</p>
        <p><strong>Total Ratings:</strong> {{ sentiment_statistics.total_ratings }}</p>
    </div>

    <!-- Chart Container with Custom Size -->
    <div class="d-flex justify-content-center">
        <div style="width: 300px; height: 300px;">
            <canvas id="sentimentChart"></canvas>
        </div>
    </div>
</div>

<!-- Chart.js Library -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<!-- Chart Setup Script -->
<script>
    const ctx = document.getElementById('sentimentChart').getContext('2d');

    new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ['Happy', 'Neutral', 'Angry'],
            datasets: [{
                data: [
                    {{ sentiment_statistics.happy_count }},
                    {{ sentiment_statistics.neutral_count }},
                    {{ sentiment_statistics.angry_count }}
                ],
                backgroundColor: [
                    '#4CAF50', // Green
                    '#FFC107', // Yellow
                    '#F44336'  // Red
                ],
                borderColor: '#fff',
                borderWidth: 2
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'bottom'
                },
                tooltip: {
                    callbacks: {
                        label: function(context) {
                            let total = {{ sentiment_statistics.total_ratings }};
                            let value = context.parsed;
                            let percentage = total ? (value / total * 100).toFixed(1) : 0;
                            return `${context.label}: ${value} (${percentage}%)`;
                        }
                    }
                }
            }
        }
    });
</script>
{% endblock %}



