{% extends "admin/layouts/admin.html.twig" %}

{% block title %}Destination list{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/destination.css') }}">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
{% endblock %}

{% block body %}
    <h1>Destinations</h1>

    <table class="table">
        <thead>
            <tr>
                <th>IdDestination</th>
                <th>Name</th>
                <th>Location</th>
                <th>Category</th>
                <th>Status</th>
                <th>Routes</th>
                <th>ContactInformation</th>
                <th>Image</th>
                <th>Rating</th>
                <th>Description</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for destination in destinations %}
            <tr>
                <td>{{ destination.idDestination }}</td>
                <td>{{ destination.name }}</td>
                <td>
                    <span class="location-click" data-location="{{ destination.location }}">
                        {{ destination.location }}
                        <i class="fas fa-map-marker-alt" style="cursor: pointer; color: #007bff;"></i>
                    </span>
                </td>
                <td>{{ destination.category }}</td>
                <td>{{ destination.status }}</td>
                <td>{{ destination.routes }}</td>
                <td>{{ destination.contactInformation }}</td>
                <td>{{ destination.image }}</td>
                <td>{{ destination.rating }}</td>
                <td>{{ destination.description }}</td>
                <td class="action-buttons">
                    <a href="{{ path('app_destination_back', {'idDestination': destination.idDestination}) }}" class="btn btn-show">
                        <i class="fas fa-eye"></i>
                    </a>
                    <a href="{{ path('app_destination_edit', {'idDestination': destination.idDestination}) }}" class="btn btn-edit">
                        <i class="fas fa-pen"></i>
                    </a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="11">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <a href="{{ path('app_destination_new') }}">Create new</a>

    <!-- Map Modal -->
    <div class="modal fade" id="mapModal" tabindex="-1" aria-labelledby="mapModalLabel" aria-hidden="true">
      <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="mapModalLabel">Destination Map</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <div id="map" style="height: 500px; border-radius: 10px;"></div>
          </div>
        </div>
      </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    <script>
        let map;

        document.querySelectorAll('.location-click').forEach(el => {
            el.addEventListener('click', function () {
                const location = this.dataset.location;
                document.getElementById('mapModalLabel').innerText = `Map - ${location}`;
                const modalEl = document.getElementById('mapModal');
                const modal = new bootstrap.Modal(modalEl);
                modal.show();

                // Wait for modal to be fully shown
                modalEl.addEventListener('shown.bs.modal', function () {
                    fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${location}`)
                        .then(res => res.json())
                        .then(data => {
                            if (data.length > 0) {
                                const lat = data[0].lat;
                                const lon = data[0].lon;

                                if (map) {
                                    map.remove();
                                }

                                map = L.map('map').setView([lat, lon], 13);
                                L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                                    attribution: '&copy; OpenStreetMap contributors'
                                }).addTo(map);

                                L.marker([lat, lon]).addTo(map)
                                    .bindPopup(location)
                                    .openPopup();

                                // Fix the blank tile issue
                                setTimeout(() => {
                                    map.invalidateSize();
                                }, 200);
                            }
                        });
                }, { once: true });
            });
        });
    </script>
{% endblock %}
