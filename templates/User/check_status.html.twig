{% extends 'base.html.twig' %}

{% block title %}Check Reservation Status{% endblock %}

{% block body %}
<div class="container-xxl flex-grow-1 container-p-y">
    <div class="card mb-4" style="background-image: url('{{ asset('css/Driver.jpg') }}'); background-size: cover; min-height: 600px;">
        <div class="card-body d-flex align-items-center justify-content-center">
            <div class="w-100" style="max-width: 800px;">
                <div class="text-center mb-5">
                    <h1 class="display-4 fw-bold text-dark">Reservation Status</h1>
                </div>
                
                <div class="card p-4" style="background-color: rgba(255, 255, 255, 0.9); border-radius: 15px; box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);">
                    <h2 class="mb-4 fw-bold text-dark">Check Your Reservation</h2>
                    
                    {{ form_start(form, {'attr': {'id': 'statusForm', 'class': 'mb-4'}}) }}
                        <div class="mb-3">
                            {{ form_label(form.email, 'Email Address', {'label_attr': {'class': 'form-label'}}) }}
                            {{ form_widget(form.email, {'attr': {
                                'class': 'form-control',
                                'placeholder': 'Enter your email address'
                            }}) }}
                            <div class="invalid-feedback" id="emailError"></div>
                        </div>
                        
                        <div class="d-flex justify-content-center gap-3">
                            {{ form_widget(form.check, {'attr': {
                                'class': 'btn btn-success px-4 py-2'
                            }}) }}
                            <a href="{{ path('app_reservation_new') }}" class="btn btn-primary px-4 py-2">
                                Back to Reservation
                            </a>
                        </div>
                    {{ form_end(form) }}
                    
                    <div id="resultContainer" class="d-none mt-4">
                        <div class="alert" id="statusMessage"></div>
                        <div class="card mt-3">
                            <div class="card-header">
                                <h5>Reservation Details</h5>
                            </div>
                            <div class="card-body">
                                <dl class="row" id="reservationDetails"></dl>
                                <div class="d-flex justify-content-end gap-2 mt-3">
                                    <a href="#" class="btn btn-warning" id="ticketButton">View Ticket</a>
                                    <a href="#" class="btn btn-purple" id="calendarButton">View Calendar</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .btn-purple {
        background-color: #9b59b6;
        color: white;
    }
    #reservationDetails dt {
        font-weight: bold;
        width: 150px;
    }
    #reservationDetails dd {
        margin-left: 170px;
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('statusForm');
    const resultContainer = document.getElementById('resultContainer');
    const statusMessage = document.getElementById('statusMessage');
    const reservationDetails = document.getElementById('reservationDetails');
    const emailField = form.querySelector('input[name="email"]');
    const emailError = document.getElementById('emailError');

    form.addEventListener('submit', async function(e) {
        e.preventDefault();
        
        // Reset UI
        emailError.textContent = '';
        emailField.classList.remove('is-invalid');
        resultContainer.classList.add('d-none');
        statusMessage.className = 'alert';
        statusMessage.textContent = '';

        // Validate email
        const email = emailField.value.trim();
        if (!email) {
            emailError.textContent = 'Please enter your email address';
            emailField.classList.add('is-invalid');
            return;
        }

        try {
            // Show loading state
            const submitBtn = form.querySelector('button[type="submit"]');
            const originalBtnText = submitBtn.innerHTML;
            submitBtn.innerHTML = '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Checking...';
            submitBtn.disabled = true;

            const response = await fetch("{{ path('app_reservation_check') }}", {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({email: email})
            });

            const data = await response.json();

            if (!response.ok) {
                throw new Error(data.message || 'Request failed');
            }

            if (data.success) {
                // Display reservation details
                const res = data.reservation;
                reservationDetails.innerHTML = `
                    <dt class="col-sm-3">Name</dt>
                    <dd class="col-sm-9">${res.firstName} ${res.lastName}</dd>
                    <dt class="col-sm-3">Email</dt>
                    <dd class="col-sm-9">${res.email}</dd>
                    <dt class="col-sm-3">Date</dt>
                    <dd class="col-sm-9">${res.date}</dd>
                    <dt class="col-sm-3">Status</dt>
                    <dd class="col-sm-9">
                        <span class="badge bg-${res.status === 'approved' ? 'success' : res.status === 'rejected' ? 'danger' : 'warning'}">
                            ${res.status}
                        </span>
                    </dd>
                    <dt class="col-sm-3">Location</dt>
                    <dd class="col-sm-9">${res.location}</dd>
                    <dt class="col-sm-3">Seats</dt>
                    <dd class="col-sm-9">${res.seats}</dd>
                `;
                
                // Update buttons
                document.getElementById('ticketButton').href = `/ticket/${res.id}`;
                document.getElementById('calendarButton').href = `/calendar?date=${res.date.split(' ')[0]}`;
                
                // Show results
                statusMessage.className = 'alert alert-success';
                statusMessage.textContent = 'Reservation found!';
                resultContainer.classList.remove('d-none');
            } else {
                statusMessage.className = 'alert alert-danger';
                statusMessage.textContent = data.message;
                resultContainer.classList.remove('d-none');
            }
        } catch (error) {
            statusMessage.className = 'alert alert-danger';
            statusMessage.textContent = error.message || 'An error occurred while checking your reservation.';
            resultContainer.classList.remove('d-none');
            console.error('Error:', error);
        } finally {
            // Reset button state
            const submitBtn = form.querySelector('button[type="submit"]');
            submitBtn.innerHTML = originalBtnText;
            submitBtn.disabled = false;
        }
    });
});
</script>
{% endblock %}